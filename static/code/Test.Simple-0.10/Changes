Revision history for JavaScript class Test.Simple.

0.10  2005-06-24T04:30:24
      - Changed the signature of functions passed to output() and friends to
        accept a single argument rather than a list of arguments. This allows
        custom functions to be much simpler.
      - Added support for Macromedia Director. Patch from Gordon McCreight.
      - Backwards Incompatibility change: moved all "modules" into Test
        "namespace" by using an object for the Test namespace and assigning
        the Build() constructor to it. See http://xrl.us/fy4h for a
        description of this approach.
      - Fixed the typeOf() class method in Test.Builder to just return the
        value returned by the "typeof" operator if the class constructor is an
        anonymous function.
      - Changed "for (var in in someArray)" to 
        "for (var i = 0; i < someArray.length; i++)" for iterating through
        arrays, since the former method will break if someone has changed the
        prototype for arrays. Thanks to Bob Ippolito for the spot!
      - The default output in browsers is now to append to an element with the
        ID "test" or, failing that, to use "document.write". The use of the
        "test" element allows output to continue to be written to the browser
        window even after the document has been closed. Reported by Adam
        Kennedy.
      - Changed the default endOutput() method to be the same as the other
        outputs.
      - Backwards incompatibility change: Changed semantics of plan() so that
        it takes an object for an argument.  This allows multiple commands to
        be passed, where the object attribute keys are the command and their
        values are the arguments.
      - Backwards incompatibility change: Changed the "no_plan", "skip_all",
        and "no_diag" (in Test.More only) options to plan() to their studlyCap
        alternatives, "noPlan", "skipAll", and "noDiag". This makes them
        consistent with JavaScript attribute naming convention.
      - Added beginAsync() and endAsync() methods to Test.Builder to allow
        users to put off the ending of a script until after asynchronous tests
        have been run. Suggested by Adam Kennedy.
      - Backwards incompatibility change: Changed the signature for the
        output() method and friends to take only a single anonymous function
        as its argument. If you still need to call a method, pass an anonymous
        function that calls it appropriately.
      - Changed handling of line-endings to be browser-specific. That is, if
        the current environment is Internet Explorer, we use \r for line
        endings.  Otherwise we use \n. Although IE properly interprets \n as a
        line ending when it's passed to "document.write()", it doesn't when
        passed to a DOM text node. No idea why not.
      - Added a browser harness. Now you can run all of your tests in a single
        browser window and get a summary at the end, including a list of
        failed tests and the time spent running the tests.
      - Fixed calls to warn() in Test.More.
      - Output to the browser now causes the window to scroll when the length
        of the output is greater than the height of the window.
      - Backwards incompatibility change: Changed all instances of "Ok" to
        "OK". So this means that the new Test.More function names are
        "canOK()", "isaOK()", and "cmpOK()". Sorry 'bout that, won't happen
        again.
      - Ported to Safari (though there are issues--see the "Bugs" section
        of the Test.Harness.Browser docs for details).

0.03  2005-04-29T18:03:18
      - Removed trailing commas from 3 arrays, since IE6/Win doesn't like
        them. And now everything works in IE. Thanks to Marshall Roch for
        tracking down and nailing this problem.
      - isNum() and isntNum() in TestBuilder.js now properly convert values
        to numbers using the global Number() function.
      - CurrentTest is now properly initialized to 0 when creating a new
        TestBuilder object.
      - Values passed to like() and unlike() that are not strings now
        always fail to match the regular expression.
      - plan() now outputs better error messages.
      - isDeeply() now works better with circular and repeating references.
      - diag() is now smarter about converting objects to strings before
        outputting them.
      - Changed isEq() and isntEq() to use simple equivalence checks (== and
        !=, respectively) instead of stringified comparisons, as the
        equivalence checks are more generally useful. Use
        "cmpOk(got, 'eq', expect)" to explicitly compare stringified
    versions of values.
      - TestBuilder.create() now properly returns a new TestBuilder object
        instead of the singleton.
      - The useNumbers(), noHeader(), and noEnding() accessors will now
        properly assign a non-null value passed to them.
      - The arrays returned from summary() and details() now have the
        appropriate structures.
      - diag() now always properly adds a "#" character after newlines.
      - Added output(), failureOutput(), todoOutput(), warnOutput(), and
        endOutput() to TestBuilder to set up function reference to which to
        send output for various purposes. The first three each default to
        document.write, while warnOutput() defaults to window.alert and
        endOutput() defaults to the appendData function of a text element
        inside an element with the ID "test" or, failing that, window.write.
      - todo() and todoSkip() now properly add "#" after all newlines in their
        messages.
      - Fixed line ending escapes in diagnostics to be platform-independent.
        Bug reported by Marshall Roch.
      - Ported about a third of the tests from Test::Simple (which is how I
        caught most of the above issues). The remaining test from Test::Simple
        will be ported for the next release.
      - Removed all stack trace information from diagnostics, since there's no
        way to get file names and line numbers in JavaScript, and outtputting
        an empty file name and "line 0" was rather useless.

0.02  2005-04-12T21:00:07
      - Removed eqArray() and eqAssoc() functions from TestMore per suggestion
        from Michael Schwern. The problem is that these are not test
        functions, and so are inconsistent with the way the rest of the
        functions work. isDeeply() is the function that users really want.
      - Changed eqSet() to isSet() and made it into a real test function.
      - Implemented skip(), todoSkip(), and todo(). These are a bit different
        than the Perl originals originals so read the docs!
      - Implemented skipAll() and BAILOUT() using exceptions and an exception
        handler installed in "window.onerror".
      - The final message of a test file now properly outputs in the proper
        place. Tests must be run inside an element its "id" attribute set to
        "test", such as '<pre id="test">'. The window.onload handler will find
        it and append the final test information.
      - Implemented skipRest() in TestBuilder and TestMore. This method is
        stubbed out the Perl original, but not yet implemented there!

0.01  2005-04-07T18:17:18
      - Initial public release (alpha).
